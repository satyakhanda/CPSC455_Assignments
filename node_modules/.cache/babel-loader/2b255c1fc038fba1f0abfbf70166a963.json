{"ast":null,"code":"import _slicedToArray from\"/Users/satyakhanda/Desktop/University/Year 3/CPSC/455/Assignments/CPSC455_Assignments/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import React,{Fragment,useEffect,useState}from\"react\";import{withRouter}from\"react-router\";import Card from\"./Card\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cardlist=function Cardlist(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),preLoaded=_useState2[0],setPreLoaded=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),artistName=_useState4[0],setArtistName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),pieceName=_useState6[0],setpieceName=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),link=_useState8[0],setlink=_useState8[1];useEffect(function(){fetch(\"/api/tradingcards\").then(function(res){return res.json();}).then(function(cards){return setPreLoaded(cards);});},[]);var createCard=function createCard(){console.log(preLoaded);if(preLoaded.length>=1){return preLoaded.map(function(card){return/*#__PURE__*/_jsx(Card,{pieceName:card.pieceName,pieceLink:card.pieceLink,artistName:card.artistName,id:card.id,delete:function _delete(e){return deleteCard(e.target.id);}});});}};var deleteCard=function deleteCard(cardId){console.log(\"DELETE CARD CALLED\");console.log(cardId);axios.delete(\"/api/tradingcards\",{data:{id:cardId}}).then(function(response){console.log(response);});};var deleteAll=function deleteAll(){axios.delete(\"/api/tradingcards/all\").then(function(response){console.log(response);});};var clearInputs=function clearInputs(){document.getElementById(\"Form-Elements\").reset();};var onClickEvents=function onClickEvents(){var newCard={artistName:artistName,pieceName:pieceName,pieceLink:link};axios.post(\"/api/tradingcards\",newCard).then(function(response){console.log(response);setPreLoaded(response);}).catch(function(error){console.log(error);});clearInputs();// fetch(\"/api/tradingcards\")\n//   .then((res) => res.json())\n//   .then((cards) => setPreLoaded(cards));\n};var loadInitial=function loadInitial(){fetch(\"/api/tradingcards/initialCards\").then(function(res){return res.json();});};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsxs(\"form\",{id:\"Form-Elements\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Artist Name: \"}),/*#__PURE__*/_jsx(\"input\",{id:\"name\",type:\"text\",onChange:function onChange(e){return setArtistName(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Name of Piece: \"}),/*#__PURE__*/_jsx(\"input\",{id:\"piece\",type:\"text\",onChange:function onChange(e){return setpieceName(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"URL: \"}),/*#__PURE__*/_jsx(\"input\",{id:\"url\",type:\"text\",onChange:function onChange(e){return setlink(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Submit\",onClick:function onClick(){return onClickEvents();}}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Clear\",onClick:function onClick(){return clearInputs();}}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Delete All\",onClick:function onClick(){return deleteAll();}}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Load Inital Cards\",onClick:function onClick(){return loadInitial();}})]})})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:createCard()})})]});};export default withRouter(Cardlist);","map":{"version":3,"sources":["/Users/satyakhanda/Desktop/University/Year 3/CPSC/455/Assignments/CPSC455_Assignments/src/components/Cardlist.js"],"names":["axios","React","Fragment","useEffect","useState","withRouter","Card","Cardlist","props","preLoaded","setPreLoaded","artistName","setArtistName","pieceName","setpieceName","link","setlink","fetch","then","res","json","cards","createCard","console","log","length","map","card","pieceLink","id","e","deleteCard","target","cardId","delete","data","response","deleteAll","clearInputs","document","getElementById","reset","onClickEvents","newCard","post","catch","error","loadInitial","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Card from \"./Card\";\n\nconst Cardlist = (props) => {\n  const [preLoaded, setPreLoaded] = useState([]);\n  var [artistName, setArtistName] = useState(\"\");\n  var [pieceName, setpieceName] = useState(\"\");\n  var [link, setlink] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/api/tradingcards\")\n      .then((res) => res.json())\n      .then((cards) => setPreLoaded(cards));\n  }, []);\n\n  var createCard = () => {\n    console.log(preLoaded)\n    if (preLoaded.length >= 1) {\n      return preLoaded.map((card) => {\n        return (\n          <Card\n            pieceName={card.pieceName}\n            pieceLink={card.pieceLink}\n            artistName={card.artistName}\n            id={card.id}\n            delete={(e) => deleteCard(e.target.id)}\n          />\n        );\n      });\n    }\n  };\n\n  var deleteCard = (cardId) => {\n    console.log(\"DELETE CARD CALLED\")\n    console.log(cardId);\n    axios\n      .delete(\"/api/tradingcards\", { data: { id: cardId } })\n      .then((response) => {\n        console.log(response);\n      });\n  };\n\n  var deleteAll = () => {\n    axios.delete(\"/api/tradingcards/all\").then((response) => {\n      console.log(response);\n    });\n  };\n\n  var clearInputs = () => {\n    document.getElementById(\"Form-Elements\").reset();\n  };\n\n  var onClickEvents = () => {\n    const newCard = {\n      artistName: artistName,\n      pieceName: pieceName,\n      pieceLink: link,\n    };\n    axios\n      .post(\"/api/tradingcards\", newCard)\n      .then((response) => {\n        console.log(response);\n        setPreLoaded(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    clearInputs();\n    // fetch(\"/api/tradingcards\")\n    //   .then((res) => res.json())\n    //   .then((cards) => setPreLoaded(cards));\n  };\n\n  var loadInitial = () => {\n    fetch(\"/api/tradingcards/initialCards\").then((res) => res.json());\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <center>\n          <form id=\"Form-Elements\">\n            <label>Artist Name: </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              onChange={(e) => setArtistName(e.target.value)}\n            />\n            <br />\n            <br />\n            <label>Name of Piece: </label>\n            <input\n              id=\"piece\"\n              type=\"text\"\n              onChange={(e) => setpieceName(e.target.value)}\n            />\n            <br />\n            <br />\n            <label>URL: </label>\n            <input\n              id=\"url\"\n              type=\"text\"\n              onChange={(e) => setlink(e.target.value)}\n            />\n            <br />\n            <br />\n            <input\n              type=\"button\"\n              value=\"Submit\"\n              onClick={() => onClickEvents()}\n            />\n            <input type=\"button\" value=\"Clear\" onClick={() => clearInputs()} />\n            <input\n              type=\"button\"\n              value=\"Delete All\"\n              onClick={() => deleteAll()}\n            />\n            <input\n              type=\"button\"\n              value=\"Load Inital Cards\"\n              onClick={() => loadInitial()}\n            />\n          </form>\n        </center>\n      </div>\n      {/* <div className=\"parentDiv\">\n      {preLoaded.map((card, index) => <div key={index}>{card.pieceName}</div>)}\n      </div> */}\n      <div>\n        <ul>{createCard()}</ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withRouter(Cardlist);\n"]},"metadata":{},"sourceType":"module"}